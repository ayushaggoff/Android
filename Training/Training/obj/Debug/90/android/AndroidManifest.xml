<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android" xmlns:tools="http://schemas.android.com/tools" package="com.companyname.training" android:installLocation="auto" android:versionCode="1" android:versionName="1.0">
  <uses-sdk android:minSdkVersion="21" android:targetSdkVersion="28" />
  <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
  <uses-permission android:name="android.permission.BLUETOOTH" android:required="false" />
  <uses-permission android:name="android.permission.BLUETOOTH_ADMIN" />
  <uses-permission android:name="android.permission.WAKE_LOlCK" />
  <uses-permission android:name="android.permission.USE_CREDENTIALS" />
  <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
  <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
  <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
  <uses-permission android:name="android.permission.INTERNET" />
  <uses-permission android:name="android.permission.GET_ACCOUNTS" />
  <uses-permission android:name="android.permission.READ_CONTACTS" />
  <uses-permission android:name="android.permission.WRITE_CONTACTS" />
  <uses-permission android:name="android.permission.CAMERA" />
  <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
  <uses-permission android:name="android.permission.GET_ACCOUNTS_PRIVILEGED" />
  <uses-feature android:name="android.hardware.camera" />
  <uses-feature android:name="android.hardware.camera.autofocus" />
  <uses-feature android:name="android.hardware.location" android:required="true" />
  <uses-feature android:name="android.hardware.location.gps" android:required="true" />
  <uses-feature android:name="android.hardware.location.network" android:required="false" />
  <uses-permission android:name="android.permission.WAKE_LOCK" />
  <!-- Required by older versions of Google Play services to create IID tokens -->
  <uses-permission android:name="com.google.android.c2dm.permission.RECEIVE" />
  <application android:name="android.app.Application" android:allowBackup="true" android:appComponentFactory="android.support.v4.app.CoreComponentFactory" android:debuggable="true" android:icon="@mipmap/ic_launcher" android:label="@string/app_name" android:roundIcon="@mipmap/ic_launcher_round" android:supportsRtl="true" android:theme="@style/AppTheme" android:usesCleartextTraffic="true">
    <meta-data android:name="com.facebook.sdk.ApplicationId" android:value="@string/facebook_app_id" />
    <service android:name="com.companyname.training.Service2" android:exported="true" android:label="@string/app_name">
      <intent-filter>
        <action android:name="com.companyname.training.Service2" />
      </intent-filter>
    </service>
    <activity android:name="com.facebook.FacebookActivity" android:configChanges="keyboard|keyboardHidden|screenLayout|screenSize|orientation" android:label="@string/app_name" android:theme="@style/com_facebook_activity_theme" />
    <provider android:name="com.facebook.FacebookContentProvider" android:authorities="com.facebook.app.FacebookContentProvider{facebook_app_id}" android:exported="true" />
    <meta-data android:name="com.google.android.gms.version" android:value="@integer/google_play_services_version" />
    <meta-data android:name="com.google.firebase.messaging.default_notification_icon" android:resource="@drawable/icon_notification" />
    <!--
    <receiver android:name="com.companyname.training.BluetoothReceiver" android:exported="true">
      <intent-filter>
        <action android:name="android.bluetooth.device.action.STATE_CHANGED" />
        
      <action android:name="android.intent.action.AIRPLANE_MODE" />
      </intent-filter>

    </receiver>
        -->
    <receiver android:name="com.google.firebase.iid.FirebaseInstanceIdInternalReceiver" android:exported="false" />
    <receiver android:name="com.google.firebase.iid.FirebaseInstanceIdReceiver" android:exported="true" android:permission="com.google.android.c2dm.permission.SEND">
      <intent-filter>
        <action android:name="MY_SPECIFIC_ACTION" />
        <action android:name="com.google.android.c2dm.intent.RECEIVE" />
        <action android:name="com.google.android.c2dm.intent.REGISTRATION" />
        <category android:name="com.companyname.training" />
      </intent-filter>
      <intent-filter>
        <action android:name="com.google.android.c2dm.intent.RECEIVE" />
      </intent-filter>
    </receiver>
    <!--
       <activity android:name = ".MainActivity">
         <intent-filter>
            <action android:name = "android.intent.action.MAIN" />
            <category android:name = "android.intent.category.LAUNCHER" />
          </intent-filter><intent-filter>
            <action android:name = "android.intent.action.MAIN" />
            <category android:name = "android.intent.category.LAUNCHER" />
          </intent-filter>
       </activity>
        -->
    <service android:name="com.companyname.training.service" />
    <uses-library android:name="org.apache.http.legacy" android:required="false" />
    <receiver android:name="crc640c8bb63ba4d0605d.BluetoothReceiver" android:enabled="true" />
    <activity android:name="crc640c8bb63ba4d0605d.MainActivity" android:label="@string/app_name" android:theme="@style/AppTheme" />
    <service android:name="crc640c8bb63ba4d0605d.MyFirebaseIIDService">
      <intent-filter>
        <action android:name="com.google.firebase.INSTANCE_ID_EVENT" />
      </intent-filter>
    </service>
    <service android:name="crc640c8bb63ba4d0605d.MyFirebaseMessagingService">
      <intent-filter>
        <action android:name="com.google.firebase.MESSAGING_EVENT" />
      </intent-filter>
    </service>
    <service android:name="crc640c8bb63ba4d0605d.Service2" />
    <service android:name="crc64d58514e9fb92953d.Service1" />
    <receiver android:name="crc6499ea9e8fee2d771c.BootReceiver" android:directBootAware="true" android:enabled="true" android:exported="true">
      <intent-filter>
        <action android:name="android.intent.action.BOOT_COMPLETED" />
        <action android:name="android.intent.action.LOCKED_BOOT_COMPLETED" />
        <action android:name="android.intent.action.QUICKBOOT_POWERON" />
        <action android:name="com.htc.intent.action.QUICKBOOT_POWERON" />
      </intent-filter>
    </receiver>
    <receiver android:name="crc6499ea9e8fee2d771c.MySecondBroadcastReceiver" />
    <activity android:name="crc645aea788ebc5f01ab.Activity1" android:label="Activity1" />
    <activity android:name="crc645aea788ebc5f01ab.AddProfileActivity" android:label="AddProfileActivity" />
    <activity android:name="crc645aea788ebc5f01ab.AddProfileForm1Activity" android:label="AddProfileForm1Activity" />
    <activity android:name="crc645aea788ebc5f01ab.AddProfileForm2Activity" android:label="AddProfileForm2Activity" />
    <activity android:name="crc645aea788ebc5f01ab.ContactListActivity" android:label="ContactListActivity" />
    <activity android:name="crc645aea788ebc5f01ab.DashboardActivity" android:label="DashboardActivity" android:launchMode="singleTask" />
    <activity android:name="crc645aea788ebc5f01ab.FragementBtnActivity" android:label="FragementBtnActivity" />
    <activity android:name="crc645aea788ebc5f01ab.GalleryActivity1" android:label="GalleryActivity1" />
    <activity android:name="crc645aea788ebc5f01ab.GoogleActivity" android:label="GoogleActivity" />
    <activity android:name="crc645aea788ebc5f01ab.GoogleSignInTryActivity" android:label="GoogleSignInTryActivity" />
    <activity android:name="crc645aea788ebc5f01ab.LoginActivity" android:label="@string/app_name" android:theme="@style/LoginTheme">
      <intent-filter>
        <action android:name="android.intent.action.MAIN" />
        <category android:name="android.intent.category.LAUNCHER" />
      </intent-filter>
    </activity>
    <activity android:name="crc645aea788ebc5f01ab.LogListActivity" android:label="LogListActivity" />
    <activity android:name="crc645aea788ebc5f01ab.SplashScreenActivity" android:label="SplashScreenActivity" android:noHistory="true" android:theme="@style/Theme.Splash" />
    <activity android:name="crc645aea788ebc5f01ab.TabActivity" android:label="TabActivity" />
    <activity android:name="crc645aea788ebc5f01ab.TwitterActivity" android:label="TwitterActivity" />
    <activity android:name="crc645aea788ebc5f01ab.VerificationCodeActivity" android:label="VerificationCodeActivity" />
    <service android:name="crc64a98abb514ffad9f1.KeepAliveService" />
    <activity android:name="crc64f98dd38067c0c88b.FormAuthenticatorActivity" android:label="Web Authenticator" />
    <activity android:name="crc64f98dd38067c0c88b.WebAuthenticatorActivity" android:label="Web Authenticator" />
    <activity android:name="crc64f98dd38067c0c88b.WebViewActivity" android:label="@string/title_activity_webview" android:theme="@android:style/Theme.DeviceDefault" />
    <activity android:name="crc64f98dd38067c0c88b.WebAuthenticatorNativeBrowserActivity" android:label="Web Authenticator Native Browser" android:launchMode="singleTop" />
    <receiver android:name="crc64f98dd38067c0c88b.CustomTabsActionsBroadcastReceiver" />
    <receiver android:name="crc64a0e0a82d0db9a07d.BatteryBroadcastReceiver" android:enabled="true" android:exported="false" android:label="Essentials Battery Broadcast Receiver" />
    <receiver android:name="crc64a0e0a82d0db9a07d.EnergySaverBroadcastReceiver" android:enabled="true" android:exported="false" android:label="Essentials Energy Saver Broadcast Receiver" />
    <receiver android:name="crc64a0e0a82d0db9a07d.ConnectivityBroadcastReceiver" android:enabled="true" android:exported="false" android:label="Essentials Connectivity Broadcast Receiver" />
    <provider android:name="xamarin.essentials.fileProvider" android:authorities="com.companyname.training.fileProvider" android:exported="false" android:grantUriPermissions="true">
      <meta-data android:name="android.support.FILE_PROVIDER_PATHS" android:resource="@xml/xamarin_essentials_fileprovider_file_paths" />
    </provider>
    <provider android:name="mono.MonoRuntimeProvider" android:authorities="com.companyname.training.mono.MonoRuntimeProvider.__mono_init__" android:directBootAware="true" android:exported="false" android:initOrder="1999999999" />
    <!-- suppress ExportedReceiver -->
    <receiver android:name="mono.android.Seppuku">
      <intent-filter>
        <action android:name="mono.android.intent.action.SEPPUKU" />
        <category android:name="mono.android.intent.category.SEPPUKU.com.companyname.training" />
      </intent-filter>
    </receiver>
    <activity android:name="com.facebook.CustomTabMainActivity" />
    <activity android:name="com.facebook.CustomTabActivity" />
    <!--
         The initialization ContentProvider will call FacebookSdk.sdkInitialize automatically
         with the application context. This config is merged in with the host app's manifest,
         but there can only be one provider with the same authority activated at any given
         point; so if the end user has two or more different apps that use Facebook SDK, only the
         first one will be able to use the provider. To work around this problem, we use the
         following placeholder in the authority to identify each host application as if it was
         a completely different provider.
        -->
    <provider android:name="com.facebook.internal.FacebookInitProvider" android:authorities="com.companyname.training.FacebookInitProvider" android:exported="false" />
    <receiver android:name="com.facebook.CurrentAccessTokenExpirationBroadcastReceiver" android:exported="false">
      <intent-filter>
        <action android:name="com.facebook.sdk.ACTION_CURRENT_ACCESS_TOKEN_CHANGED" />
      </intent-filter>
    </receiver>
    <receiver android:name="com.facebook.CampaignTrackingReceiver" android:exported="true" android:permission="android.permission.INSTALL_PACKAGES">
      <intent-filter>
        <action android:name="com.android.vending.INSTALL_REFERRER" />
      </intent-filter>
    </receiver>
    <activity android:name="com.google.firebase.auth.internal.FederatedSignInActivity" android:excludeFromRecents="true" android:exported="true" android:launchMode="singleTask" android:permission="com.google.firebase.auth.api.gms.permission.LAUNCH_FEDERATED_SIGN_IN" android:theme="@android:style/Theme.Translucent.NoTitleBar" tools:replace="android:launchMode" />
    <service android:name="com.google.firebase.components.ComponentDiscoveryService" android:exported="false">
      <meta-data android:name="com.google.firebase.components:com.google.firebase.auth.FirebaseAuthRegistrar" android:value="com.google.firebase.components.ComponentRegistrar" />
      <meta-data android:name="com.google.firebase.components:com.google.firebase.iid.Registrar" android:value="com.google.firebase.components.ComponentRegistrar" />
    </service>
    <provider android:name="com.google.firebase.provider.FirebaseInitProvider" android:authorities="com.companyname.training.firebaseinitprovider" android:exported="false" android:initOrder="100" />
    <!--
             FirebaseInstanceIdService performs security checks at runtime,
             no need for explicit permissions despite exported="true"
        -->
    <service android:name="com.google.firebase.iid.FirebaseInstanceIdService" android:exported="true">
      <intent-filter android:priority="-500">
        <action android:name="com.google.firebase.INSTANCE_ID_EVENT" />
      </intent-filter>
    </service>
    <!--
             FirebaseMessagingService performs security checks at runtime,
             no need for explicit permissions despite exported="true"
        -->
    <service android:name="com.google.firebase.messaging.FirebaseMessagingService" android:exported="true">
      <intent-filter android:priority="-500">
        <action android:name="com.google.firebase.MESSAGING_EVENT" />
      </intent-filter>
    </service>
    <activity android:name="com.google.android.gms.auth.api.signin.internal.SignInHubActivity" android:excludeFromRecents="true" android:exported="false" android:theme="@android:style/Theme.Translucent.NoTitleBar" />
    <!--
            Service handling Google Sign-In user revocation. For apps that do not integrate with
            Google Sign-In, this service will never be started.
        -->
    <service android:name="com.google.android.gms.auth.api.signin.RevocationBoundService" android:exported="true" android:permission="com.google.android.gms.auth.api.signin.permission.REVOCATION_NOTIFICATION" />
    <activity android:name="com.google.android.gms.common.api.GoogleApiActivity" android:exported="false" android:theme="@android:style/Theme.Translucent.NoTitleBar" />
  </application>
</manifest>